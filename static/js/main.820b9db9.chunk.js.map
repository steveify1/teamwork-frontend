{"version":3,"sources":["components/Cards/Card/Card.module.css","container/NewPost/NewPost.module.css","container/PostDetail/PostDetail.module.css","components/Feedback/Feedback.module.css","components/Comments/Comment/Comment.module.css","components/InputField/InputField.module.css","container/Auth/Login/Login.module.css","container/Auth/SignUp/SignUp.module.css","components/Comments/Comments.module.css","components/Dropdown/Dropdown.module.css","hoc/Section/Section.module.css","components/Loader/Loader.module.css","container/DeletePost/DeletePost.module.css","assets/images/standing-20.svg","assets/images/bg4-2.svg","components/Dropdown/DropdownItems/DropdownItems.module.css","components/Dropdown/DropdownItems/DropdownItem/DropdownItem.module.css","hoc/Auxiliary/Auxiliary.js","components/InputField/Select/Option.js","components/InputField/Select/Select.js","components/InputField/InputField.js","components/Button/Button.js","container/Auth/Login/Login.js","container/Auth/SignUp/SignUp.js","services/Credentials.js","components/Nav/Nav.js","hoc/Section/Section.js","components/Dropdown/DropdownItems/DropdownItem/DropdownItem.js","components/Dropdown/DropdownItems/DropdownItems.js","components/Dropdown/Dropdown.js","components/Cards/Card/Card.js","components/Cards/Cards.js","container/Posts/Posts.js","container/Home/Home.js","components/Loader/Loader.js","container/NewPost/NewPost.js","components/Comments/Comment/Comment.js","components/Comments/Comments.js","container/PostDetail/PostDetail.js","container/DeletePost/DeletePost.js","components/Feedback/Feedback.js","container/EmployeeAccount/EmployeeAccount.js","container/Members/Members.js","hoc/Routes.js","components/Layout/Layout.js","container/Auth/Auth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","option","value","toLowerCase","select","id","onBlur","blurred","onChange","changed","className","defaultValue","options","map","i","Option","key","name","inputField","classes","InputField","Label","htmlFor","type","placeholder","INPUT","Control","text","checkbox","file","radio","email","password","textarea","augmentedClassName","Select","genarateField","Button","onClick","this","clicked","styleType","size","Component","login","errorFeedback","LoginWrapper","Banner","Image","src","image","alt","Login","Brand","onSubmit","submitted","signup","getToken","curUser","JSON","parse","localStorage","getItem","token","credentials","Nav","jobRole","to","triggerSignOut","section","titleExists","undefined","title","Section","SectionTitle","dropdownItem","DropdownItem","dropdownItems","items","DropdownItems","item","dropdown","Dropdown","MenuIcon","MenuItems","card","cardImgDiv","url","CardImage","cardText","article","CardText","dt","Date","createdOn","timestamp","getDate","getMonth","getFullYear","postType","postPath","Card","CardHeader","UserAndTimeStamp","authorId","Author","AuthorImage","avatar","authorName","AuthorName","TimeStamp","CardBody","Title","CardFooter","CardTag","Cards","data","d","firstName","lastName","Posts","state","axios","get","then","console","log","setState","catch","e","Home","Loader","LoaderChild","NewPost","fieldValues","switchActiveForm","event","activeTab","target","oldState","firstElementChild","parentElement","classList","contains","Active","remove","activeTabControl","add","prevActiveTab","cleanStoredFieldValues","setFieldValue","files","submitPostHandler","a","preventDefault","isEditingPost","updatePostHandler","createPostHandler","resource","headers","fd","FormData","append","post","res","redirect","response","updatedPostToEdit","postToEdit","Object","keys","forEach","field","patch","postId","location","pathname","endsWith","pathnameDestructure","split","endpoint","category","gif","renderRedirect","length","Tab","TabControls","TabControl","TabBody","getActiveForm","withRouter","comment","Comment","Footer","Timestamp","Comments","CommentBox","Input","CommentList","comments","ts","formatedTS","getHours","getMinutes","PostDetail","commentInputElement","postedComment","commentFieldValue","pathName","getCommentValue","bind","postComment","oldCommentsState","postImage","imageUrl","PostImage","postText","PostText","Header","PostTitle","Body","PostComments","DeletePost","deletePostHandler","cancelDeleteHandler","delete","Buttons","Feedback","showFeedBack","feedBackType","Default","message","Show","Message","EmployeeAccount","signUpDetails","confirmPassword","gender","department","address","feedback","getInputValueHandler","signUpHandler","object","persist","reset","isUserLoggedIn","error","window","scrollTo","SignUp","Members","routes","path","exact","component","layout","defaults","signOutHandler","Routes","Auth","loginDetails","isLoginScreenActive","userIsLoggedIn","loginHandler","toggleLoginAndSignUpScreen","checkCredentials","getCredentials","userData","setItem","stringify","removeItem","storeCredentials","clearCredentials","renderLoginScreen","renderSignUpScreen","toggleScreen","Layout","renderAppCore","renderLoginOrSignUpScreen","baseURL","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.820b9db9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2NRZH\",\"Title\":\"Card_Title__FA280\",\"CardHeader\":\"Card_CardHeader__kCnJu\",\"CardTag\":\"Card_CardTag__1Ednh\",\"CardBody\":\"Card_CardBody__2m53P\",\"CardText\":\"Card_CardText__2fvO4\",\"CardImage\":\"Card_CardImage__3jcTw\",\"CardFooter\":\"Card_CardFooter__2MDPl\",\"Author\":\"Card_Author__8GSeO\",\"AuthorImage\":\"Card_AuthorImage__3I33N\",\"AuthorName\":\"Card_AuthorName__2ackM\",\"TimeStamp\":\"Card_TimeStamp__3hyir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tab\":\"NewPost_Tab__3ueDY\",\"TabControls\":\"NewPost_TabControls__XeGay\",\"TabControl\":\"NewPost_TabControl__br9Pf\",\"Active\":\"NewPost_Active__2vMnC\",\"TabBody\":\"NewPost_TabBody__1rWOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostDetail\":\"PostDetail_PostDetail__2WSqP\",\"PostImage\":\"PostDetail_PostImage__LJ7Yj\",\"Header\":\"PostDetail_Header__1JsI-\",\"PostTitle\":\"PostDetail_PostTitle__3WLoL\",\"Body\":\"PostDetail_Body__1Njqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Feedback_Feedback__1pQd5\",\"Default\":\"Feedback_Default__2Cfyd\",\"Message\":\"Feedback_Message__2Eaxg\",\"Show\":\"Feedback_Show__1WQ2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment___r-xa\",\"Footer\":\"Comment_Footer__3-yHG\",\"Author\":\"Comment_Author__3xBXG\",\"AuthorImage\":\"Comment_AuthorImage__2D3pA\",\"AuthorName\":\"Comment_AuthorName__3xtXS\",\"Timestamp\":\"Comment_Timestamp__3wWsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputField\":\"InputField_InputField__9Ohbr\",\"Label\":\"InputField_Label__3jnGz\",\"Control\":\"InputField_Control__FQksN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginWrapper\":\"Login_LoginWrapper__2e0wD\",\"Image\":\"Login_Image__bgf5k\",\"Login\":\"Login_Login__1_UQw\",\"Banner\":\"Login_Banner__20vHy\",\"Brand\":\"Login_Brand__3FTpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginWrapper\":\"SignUp_LoginWrapper__AdC-f\",\"Image\":\"SignUp_Image__Z2z6f\",\"Login\":\"SignUp_Login__3iCle\",\"Banner\":\"SignUp_Banner__3JugY\",\"Brand\":\"SignUp_Brand__2NNIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentBox\":\"Comments_CommentBox__27lBq\",\"Input\":\"Comments_Input__3zetE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropdown\":\"Dropdown_Dropdown__M1f83\",\"MenuItems\":\"Dropdown_MenuItems__3tuu5\",\"MenuIcon\":\"Dropdown_MenuIcon__1swp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1lSpG\",\"SectionTitle\":\"Section_SectionTitle__3-pIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__Uv6Qf\",\"loader\":\"Loader_loader__4A-P0\",\"LoaderChild\":\"Loader_LoaderChild__1Vh9Y\",\"loaderChild\":\"Loader_loaderChild__3zJ1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"DeletePost_Button__22unj\"};","module.exports = __webpack_public_path__ + \"static/media/standing-20.90aaa58f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg4-2.ba8fda24.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownItems\":\"DropdownItems_DropdownItems__3amMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownItem\":\"DropdownItem_DropdownItem__NfDIl\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from 'react';\r\n\r\nconst option = (props) => {\r\n  return <option value={props.value.toLowerCase()}>{props.children}</option>\r\n}\r\n\r\nexport default option;\r\n","import React from 'react';\r\nimport Option from './Option';\r\n\r\nconst select = (props) => {\r\n  return <select id={props.id} onBlur={props.blurred} onChange={props.changed} className={props.className} defaultValue={props.defaultValue}>\r\n    {props.options.map((option, i) => <Option key={i} name={option.name} value={option.name.toLowerCase()}>{option.name}</Option>)}\r\n  </select>\r\n};\r\n\r\nexport default select;\r\n","import React from 'react';\r\nimport classes from './InputField.module.css';\r\nimport Select from './Select/Select';\r\n\r\n// generate Field based on field `type`\r\nconst genarateField = (props) => {\r\n  const { id, type, placeholder, options } = props;\r\n\r\n  const INPUT = <input onChange={props.changed} onBlur={props.blurred} className={classes.Control} id={id} type={type} placeholder={placeholder} defaultValue={props.value}/>;\r\n  const TEXTAREA = <textarea onChange={props.changed} onBlur={props.blurred} className={`${classes.Control} ${props.augmentedClassName}`} id={id} type={type} placeholder={placeholder}defaultValue={props.value}></textarea>;\r\n  const SELECT = <Select changed={props.changed} blurred={props.blurred} id={id} className={classes.Control} options={options} defaultValue={props.value}/>\r\n\r\n  const typeToField = {\r\n    text: INPUT,\r\n    checkbox: INPUT,\r\n    file: INPUT,\r\n    radio: INPUT,\r\n    email: INPUT,\r\n    password: INPUT,\r\n    textarea: TEXTAREA,\r\n    select: SELECT\r\n  }\r\n\r\n  return typeToField[type];\r\n};\r\n\r\n\r\nconst inputField = (props) => {\r\n  return (\r\n    <div className={classes.InputField}>\r\n      {props.name ? <label className={classes.Label} htmlFor={props.id}>{props.name}</label> : null}\r\n      {genarateField(props)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inputField\r\n","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.clicked || null}\r\n        className={`${this.props.styleType} btn btn-${this.props.size}`}>\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport InputField from '../../../components/InputField/InputField';\r\nimport Button from '../../../components/Button/Button';\r\nimport classes from './Login.module.css';\r\nimport image from '../../../assets/images/standing-20.svg';\r\n\r\nconst login = (props) => {\r\n  const errorFeedback = props.errorFeedback !== '' ? <p className='error'>{props.errorFeedback}</p> : null;\r\n\r\n  return (\r\n    <div className={classes.LoginWrapper}>\r\n      <div className={classes.Banner}></div>\r\n\r\n      <div className={classes.Image}>\r\n        <img src={image} alt='catch up with team mates' />\r\n      </div>\r\n\r\n      <div className={classes.Login}>\r\n        <div className={classes.Brand}>\r\n          <h1>TeamWork</h1>\r\n        </div>\r\n\r\n        <h2>Find out what your teammates have been up to</h2>\r\n\r\n        <form onSubmit={props.submitted}>\r\n          {/* Show error feedback if any */}\r\n          {errorFeedback}\r\n          <InputField changed={props.changed} id='email' type='email' name='email *' />\r\n          <InputField changed={props.changed} id='password' type='password' name='password *' />\r\n          <Button size='full-width'>sign in</Button>\r\n\r\n          {/* <span className={classes.Footer} onClick={props.toggleScreen}>Don't have an account?</span> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default login;\r\n","import React from 'react';\r\nimport InputField from '../../../components/InputField/InputField';\r\nimport Button from '../../../components/Button/Button';\r\nimport classes from './SignUp.module.css';\r\nimport image from '../../../assets/images/bg4-2.svg';\r\n\r\nconst signup = (props) => {\r\n  const errorFeedback = props.errorFeedback !== '' ? <p className='error'>{props.errorFeedback}</p> : null;\r\n\r\n  return (\r\n    <div className={classes.LoginWrapper}>\r\n      <div className={classes.Banner}>\r\n        <div className={classes.Image}>\r\n          <img src={image} alt='catch up with team mates' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.Login}>\r\n        <div className={classes.Brand}>\r\n          <h1>New Employee Account</h1>\r\n        </div>\r\n\r\n        <p>Set up a new user account. Account credentials will be sent to the email address provided. Please, ensure that the email is correct.</p>\r\n\r\n        <form onSubmit={props.submitted}>\r\n          {/* Show error feedback if any */}\r\n          {errorFeedback}\r\n          <InputField changed={props.changed} id='firstName' type='text' name='first name *' />\r\n          <InputField changed={props.changed} id='lastName' type='text' name='last name *' />\r\n          <InputField changed={props.changed} id='email' type='email' name='email *' />\r\n          <InputField changed={props.changed} id='password' type='password' name='password *' />\r\n          <InputField changed={props.changed} id='confirmPassword' type='password' name='confirm password *' />\r\n          <InputField changed={props.changed} id='gender' type='select' name='gender *'\r\n            options={[\r\n              { name: 'Select gender' },\r\n              { name: 'male' },\r\n              { name: 'female' }]} />\r\n          <InputField changed={props.changed} id='jobRole' type='select' name='job role *'\r\n            options={[\r\n              { name: 'Select job role' },\r\n              { name: 'Finance' },\r\n              { name: 'Communication' },\r\n              { name: 'Research' },\r\n              { name: 'Analytics' }]} />\r\n          <InputField changed={props.changed} id='department' type='select' name='department *'\r\n            options={[\r\n              { name: 'Select department' },\r\n              { name: 'Finance' },\r\n              { name: 'Communication' },\r\n              { name: 'Research' },\r\n              { name: 'Analytics' }]} />\r\n          <InputField changed={props.changed} id='address' type='text' name='address *' />\r\n          <Button size='full-width'>create account</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default signup;","// This service holds the current user information\r\n// It tells if any user is  currently logged in\r\n// It stores the current user data when they\r\n\r\nexport const getToken = () => {\r\n  const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n  return curUser && curUser.token;\r\n}\r\n\r\n// Returns a boolean depending on whether or not the user has his token stored in the localStorage\r\nexport const isUserSignedIn = () => getToken();\r\n\r\nconst credentials = () => {\r\n  const curUser = JSON.parse(localStorage.getItem('curUser'));\r\n  return curUser && curUser;\r\n};\r\n\r\nexport default credentials;\r\n","import React from 'react';\r\nimport credentials from '../../services/Credentials';\r\nimport { Link } from 'react-router-dom';\r\nimport InputField from '../InputField/InputField';\r\nimport './Nav.css';\r\n\r\n// Navigation\r\nconst Nav = (props) => {\r\n  const { jobRole } = credentials();\r\n\r\n  return (<nav id='main-nav'>\r\n    {/* Logo */}\r\n    <Link to='/' >\r\n      <h1 id='logo'>Teamwork</h1>\r\n    </Link>\r\n\r\n\r\n    {/* Main Menu */}\r\n    <div className='search-area'>\r\n      <form>\r\n        <InputField type='text' placeholder='search posts, teammates' />\r\n        {/* <button type='submit' style={{transform: 'scale(1)'}}></button> */}\r\n      </form>\r\n    </div>\r\n    <div className='menu main-menu'>\r\n      {/* Hamburger */}\r\n      <p className='hamburger'>MENU</p>\r\n      {/* Menu Items */}\r\n      <ul>\r\n        <li><Link to='/' className='active'>Stories</Link></li>\r\n        <li><Link to='/post/new'>New Post</Link></li>\r\n        {jobRole === 'admin' ? <li><Link to='/members'>Add Member</Link></li> : null}\r\n        <li><Link onClick={props.triggerSignOut} to='/'>Logout</Link></li>\r\n        {/* <li><Link to={`users/${userId}`}>Me</Link></li> */}\r\n      </ul>\r\n    </div>\r\n  </nav>);\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport classes from './Section.module.css';\r\n\r\nconst section = (props) => {\r\n  const titleExists = props.title !== undefined;\r\n  return (\r\n    <section className={classes.Section} id={props.id}>\r\n      {titleExists ? <h2 className={classes.SectionTitle}>{props.title}</h2> : null}\r\n\r\n      {props.children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default section;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './DropdownItem.module.css';\r\n\r\nconst dropdownItem = (props) => {\r\n  return (\r\n      <li className={classes.DropdownItem}><Link to={props.to}>{props.children}</Link></li>\r\n  );\r\n};\r\n\r\nexport default dropdownItem;\r\n","import React from 'react';\r\nimport classes from './DropdownItems.module.css';\r\nimport DropdownItem from './DropdownItem/DropdownItem';\r\n\r\nconst dropdownItems = (props) => {\r\n  const { items } = props;\r\n\r\n  return (\r\n    <ul className={`${classes.DropdownItems} ${props.augmentedClassName}`}>\r\n      {\r\n        items.map((item, i) => {\r\n          return <DropdownItem key={i} to={item.to}>{item.name}</DropdownItem>\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default dropdownItems;\r\n","import React from 'react';\r\nimport classes from './Dropdown.module.css';\r\nimport DropdownItems from './DropdownItems/DropdownItems';\r\n\r\nconst dropdown = (props) => {\r\n\r\n  return (\r\n    <div className={classes.Dropdown}>\r\n      <div className={classes.MenuIcon}></div>\r\n\r\n      {/* Dropdown Items */}\r\n      <DropdownItems augmentedClassName={classes.MenuItems} items={props.items} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default dropdown;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Dropdown from '../../Dropdown/Dropdown';\r\nimport classes from './Card.module.css';\r\n\r\nconst card = (props) => {\r\n  const cardImgDiv = props.url !== undefined ? (\r\n    <div className={classes.CardImage}>\r\n      <img src={props.url} alt='' />\r\n    </div>) : null;\r\n\r\n  const cardText = props.article !== undefined ? (\r\n    <div className={classes.CardText}>\r\n      <p>{props.article}</p>\r\n    </div>) : null;\r\n\r\n  // Format time\r\n  let dt = new Date(props.createdOn);\r\n  let timestamp = `${dt.getDate()}/${dt.getMonth() + 1}/${dt.getFullYear()}`;\r\n\r\n\r\n  // Check Post Type and get the generate the post path\r\n  const postType = props.url !== undefined ? 'gifs' : 'articles';\r\n  const postPath = `${postType}/${props.id}`; // This will be used to get a single post detail from the API\r\n\r\n  return (\r\n    <article id={props.id} className={classes.Card}>\r\n\r\n      {/* Card Header */}\r\n      <section className={classes.CardHeader}>\r\n        <div className={classes.UserAndTimeStamp}>\r\n          {/* Card Author */}\r\n          <Link to={`/users/${props.authorId}`}>\r\n            <div className={classes.Author}>\r\n              <div className={classes.AuthorImage}>\r\n                <img src={props.avatar} alt={props.authorName} />\r\n              </div>\r\n              <span className={classes.AuthorName}>{props.authorName}</span>\r\n            </div>\r\n          </Link>\r\n\r\n          {/* Timestamp */}\r\n          <div className={classes.TimeStamp}>{timestamp}</div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* Dropdown menu */}\r\n        <Dropdown items={[\r\n          { name: 'report', to: `/${postType}/${props.id}/report` },\r\n          { name: 'edit', to: `/${postType}/${props.id}/edit` },\r\n          { name: 'delete', to: `/${postType}/${props.id}/delete` },\r\n        ]} />\r\n      </section>\r\n\r\n      <Link to={postPath}>\r\n        <section className={classes.CardBody}>\r\n          {/* Card Title */}\r\n          <h3 className={classes.Title}>{props.title}</h3>\r\n\r\n          {/* Card Image if exists*/}\r\n          {cardImgDiv}\r\n\r\n          {/* Card Text if exists*/}\r\n          {cardText}\r\n        </section>\r\n      </Link>\r\n\r\n      {/* Card Footer */}\r\n      <section className={classes.CardFooter}>\r\n        <p className={classes.CardTag}>trending</p>\r\n      </section>\r\n    </article>\r\n  )\r\n};\r\n\r\nexport default card;\r\n","import React from 'react';\r\nimport Card from './Card/Card';\r\nimport classes from './Cards.module.css';\r\n\r\nconst Cards = (props) => {\r\n  // Loop through the data set render card\r\n  return (\r\n    <div className={classes.Cards}>\r\n      {props.data.map((d, i) => (\r\n        <Card\r\n        key={i}\r\n        id={d.id}\r\n        url={d.url}\r\n        title={d.title}\r\n        article={d.article}\r\n        authorId={d.authorId}\r\n        authorName={`${d.firstName} ${d.lastName}`}\r\n        avatar={d.avatar}\r\n        createdOn={d.createdOn}/>\r\n      )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Cards from '../../components/Cards/Cards';\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    data: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get('/feed')\r\n      .then(d => {\r\n        const { data } = d.data\r\n\r\n        console.log(data);\r\n\r\n        // set the state of post data\r\n        this.setState({ data });\r\n      })\r\n      .catch(e => console.log(`hello ${e}`));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Cards data={this.state.data} />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Section from '../../hoc/Section/Section';\r\nimport Posts from '../Posts/Posts';\r\n// import Categories from '../Categories/Categories';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        {/* Popular Categories */}\r\n        {/* <Categories /> */}\r\n        {/* Posts */}\r\n        <Section\r\n          id='posts'\r\n          title='Recent Posts'>\r\n          <Posts />\r\n        </Section>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport classes from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={classes.Loader}>\r\n      <div className={classes.LoaderChild}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { isUserSignedIn } from '../../services/Credentials';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Section from '../../hoc/Section/Section';\r\nimport InputField from '../../components/InputField/InputField';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport classes from './NewPost.module.css';\r\n\r\nclass NewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.isEditingPost = props.location.pathname.endsWith('edit');\r\n\r\n    const pathnameDestructure = this.props.location.pathname.split('/');\r\n    this.postId = pathnameDestructure[2] * 1; // a trick to convert string to number\r\n\r\n    this.state = {\r\n      activeTab: 'article',\r\n      prevActiveTab: null,\r\n      activeTabControl: null,\r\n\r\n      // This holds the details (fetched from api by id) of the post we want to edit\r\n      postToEdit: {},\r\n\r\n      redirect: false,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This holds the form field values. Values from form fields are registered on blur.\r\n   * Values are registered using the HTML element's 'id' as key and it's 'value' as the value\r\n   */\r\n\r\n  fieldValues = {}\r\n\r\n  shouldComponentUpdate() {\r\n    return this.state.activeTab !== this.state.prevActiveTab;\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    if (this.isEditingPost) {\r\n      const endpoint = `/articles/${this.postId}`;\r\n      const res = await axios.get(endpoint);\r\n\r\n      const { data } = res.data;\r\n\r\n      this.setState({ postToEdit: data });\r\n    }\r\n  }\r\n\r\n  switchActiveForm = (event) => {\r\n    if (this.state.activeTab !== event.target.id) {\r\n      const oldState = { ...this.state };\r\n\r\n      // Usually the default tab will be the first child of the tab element\r\n      const { firstElementChild } = event.target.parentElement;\r\n      if (firstElementChild.classList.contains(classes.Active)) {\r\n        firstElementChild.classList.remove(classes.Active)\r\n      };\r\n\r\n      if (oldState.activeTabControl) {\r\n        oldState.activeTabControl.classList.remove(classes.Active)\r\n      }\r\n\r\n      event.target.classList.add(classes.Active);\r\n\r\n      this.setState({\r\n        activeTab: event.target.id,\r\n        prevActiveTab: oldState.activeTab,\r\n        activeTabControl: event.target,\r\n      });\r\n\r\n      // remember to clean up the stored field values each time the user switches to a new type of form\r\n      this.cleanStoredFieldValues();\r\n    }\r\n  }\r\n\r\n  getActiveForm() {\r\n    let field = null;\r\n    if (this.state.activeTab === 'article') {\r\n      field = (\r\n        <Aux>\r\n          <InputField blurred={this.setFieldValue} type='select' id='category' name='category'\r\n            options={[\r\n              { name: this.state.postToEdit.category || 'Select category' },\r\n              { name: 'Finance' },\r\n              { name: 'Communication' },\r\n              { name: 'Research' },\r\n              { name: 'Analytics' }]} />\r\n          <InputField blurred={this.setFieldValue} type='textarea' id='article' name='article' value={this.state.postToEdit.article} />\r\n        </Aux>\r\n      );\r\n    } else {\r\n      field = <InputField blurred={this.setFieldValue} type='file' id='image' name='choose a gif file' />\r\n    }\r\n\r\n    return field;\r\n  }\r\n\r\n  /**\r\n   * Cleans up the 'this.fieldValue object as the form is switched between\r\n   * the article form and the gif form.\r\n   */\r\n  cleanStoredFieldValues() {\r\n    if (this.state.activeTab === 'gif' && this.fieldValues.article) {\r\n      delete this.fieldValues.article\r\n    }\r\n\r\n    if (this.state.activeTab === 'article' && this.fieldValues.gif) {\r\n      delete this.fieldValues.gif\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This obtains the each field value on blur\r\n   * @param { InputElement } target an InputElement object that triggered the event\r\n   */\r\n  setFieldValue = ({ target }) => {\r\n    const { id, value, files, type } = target;\r\n\r\n    // first check if i's a file upload\r\n    if (type === 'file') {\r\n      this.fieldValues[id] = files[0];\r\n      return;\r\n    }\r\n\r\n    this.fieldValues[id] = value;\r\n  }\r\n\r\n  /**\r\n   * This validates the imput fields and submits the form\r\n   */\r\n  submitPostHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    /**\r\n     * First, we want to check  if the user is trying to update a post\r\n     * then make the update by calling `this.updatePostHandler()`\r\n     */\r\n    if (this.isEditingPost) {\r\n      await this.updatePostHandler();\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Well, if the user is trying to create a new post insteadt,\r\n     * then create the post by calling `this.createPostHandler()`\r\n     */\r\n    await this.createPostHandler();\r\n  }\r\n\r\n  createPostHandler = async () => {\r\n    const resource = this.state.activeTab === 'gif' ? 'gifs' : 'articles'\r\n\r\n    try {\r\n      let res;\r\n\r\n      if (resource === 'gifs') {\r\n        const headers = {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n\r\n        const fd = new FormData(); // fd = Form Data\r\n        fd.append('image', this.fieldValues.image);\r\n        fd.append('title', this.fieldValues.title);\r\n\r\n        res = await axios.post(`/${resource}`, fd, { headers });\r\n      } else {\r\n        res = await axios.post(`/${resource}`, this.fieldValues);\r\n      }\r\n\r\n\r\n      console.log(res);\r\n\r\n      // Set Redirect state to 'true'\r\n      this.setState({ redirect: true });\r\n\r\n    } catch ({ response }) {\r\n      // const { status, error } = response.data;\r\n      console.log(response);\r\n    }\r\n  }\r\n\r\n  updatePostHandler = async () => {\r\n    const updatedPostToEdit = this.state.postToEdit;\r\n\r\n    // Update the `this.state.postToEdit` object using the above copy\r\n    Object.keys(this.fieldValues).forEach(field => {\r\n      if (updatedPostToEdit[field] !== this.fieldValues[field]) {\r\n        updatedPostToEdit[field] = this.fieldValues[field];\r\n      }\r\n    });\r\n\r\n    console.log(updatedPostToEdit);\r\n\r\n    try {\r\n      const res = await axios.patch(`/articles/${this.postId}`, updatedPostToEdit);\r\n\r\n      console.log(res);\r\n\r\n      // Set Redirect state to 'true'\r\n      this.setState({ redirect: true });\r\n\r\n    } catch ({ response }) {\r\n      // const { status, error } = response.data;\r\n      console.log(response);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This redirects to the hompage once a post is successfully created/updated\r\n   */\r\n  renderRedirect() {\r\n    if (this.state.redirect) { return <Redirect to='/' /> }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Aux>\r\n        {/* Redirect back to home route if the user is not signed in */}\r\n        {isUserSignedIn() ? null : <Redirect to='/' />}\r\n\r\n        <Section\r\n          title={this.isEditingPost ? 'Update Article' : 'Create A Post'}>\r\n\r\n          {/* Conditinally redirect the user */}\r\n          {this.renderRedirect()}\r\n\r\n\r\n          {/* Show the loader first if the user is trying to edit a post */}\r\n          {!Object.keys(this.state.postToEdit).length && this.isEditingPost ? <Loader /> : (\r\n            <div className={classes.Tab}>\r\n              <div className={classes.TabControls}>\r\n                <div onClick={this.switchActiveForm} id='article' className={`${classes.TabControl} ${classes.Active} active`}>article</div>\r\n                {this.isEditingPost ? null : <div onClick={this.switchActiveForm} id='gif' className={`${classes.TabControl}`}>gif</div>}\r\n              </div>\r\n\r\n              <div className={classes.TabBody}>\r\n                <form>\r\n                  <InputField blurred={this.setFieldValue} type='text' id='title' name='title' value={this.state.postToEdit.title} />\r\n\r\n                  {this.getActiveForm()}\r\n\r\n                  <input type='submit' className='btn' onClick={this.submitPostHandler} value='Post' />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Section>\r\n      </Aux>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(NewPost);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './Comment.module.css';\r\n\r\nconst comment = (props) => {\r\n  return (\r\n    <article className={classes.Comment}>\r\n      <p>{props.children}</p>\r\n\r\n      <div className={classes.Footer}>\r\n        <Link to={`/users/${props.authorId}`}>\r\n          <div className={classes.Author}>\r\n            <div className={classes.AuthorImage}>\r\n              <img src={props.avatar} alt={props.authorName} />\r\n            </div>\r\n            <span className={classes.AuthorName}>{props.authorName}</span>\r\n          </div>\r\n        </Link>\r\n        <p className={classes.Timestamp}>{props.timestamp}</p>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default comment;\r\n","import React from 'react';\r\nimport classes from './Comments.module.css';\r\nimport Comment from './Comment/Comment';\r\nimport InputField from '../InputField/InputField';\r\nimport Button from '../Button/Button';\r\n\r\nconst Comments = (props) => {\r\n  return (\r\n    <div className={classes.Comments}>\r\n      {/* Comment Input Field */}\r\n      <div className={classes.CommentBox}>\r\n        <InputField id='comment' blurred={props.blurred} augmentedClassName={classes.Input} type='textarea'/>\r\n        <Button clicked={props.clicked}>Comment</Button>\r\n      </div>\r\n\r\n      {/* List of comments */}\r\n      <div className={classes.CommentList}>\r\n        {\r\n          props.comments.map((comment, i) => {\r\n            const { createdOn } = comment;\r\n            const ts = new Date(createdOn); // ts = timestamp\r\n            let formatedTS = `${ts.getDate()}/${ts.getMonth() + 1}/${ts.getFullYear()}`;\r\n            formatedTS += `   ${ts.getHours()}:${ts.getMinutes()}`;\r\n\r\n            return <Comment key={i}\r\n              timestamp={formatedTS}\r\n              authorId={comment.authorId}\r\n              authorName={`${comment.firstName} ${comment.lastName}`}\r\n              avatar={comment.avatar}>{comment.comment}</Comment>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Section from '../../hoc/Section/Section';\r\nimport Comments from '../../components/Comments/Comments';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport classes from './PostDetail.module.css';\r\n\r\nclass PostDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.commentFieldValue = {};\r\n\r\n    this.pathName = this.props.location.pathname;\r\n\r\n    this.getCommentValue = this.getCommentValue.bind(this);\r\n    this.postComment = this.postComment.bind(this);\r\n  }\r\n\r\n  state = {\r\n    commentInputElement: null,\r\n    post: null,\r\n    comments: [],\r\n    postedComment: null, // This will hold the returned comment when a comment is successfully posted\r\n  }\r\n\r\n  // get the post from the server (including any comment on the given post)\r\n  async componentDidMount() {\r\n    const res = await axios.get(this.props.location.pathname);\r\n\r\n    const { data } = res.data;\r\n    // Upadate `post` state\r\n    this.setState({ post: data, comments: [...data.comments] });\r\n\r\n  }\r\n\r\n  getCommentValue({ target }) {\r\n    const { id, value } = target;\r\n\r\n    this.commentFieldValue[id] = value;\r\n\r\n    // store the comment input field\r\n    // so that we can erase empty the box after posting comment\r\n    this.setState({ commentInputElement: target });\r\n  }\r\n\r\n  async postComment() {\r\n    console.log(this.props);\r\n    if (Object.keys(this.commentFieldValue).length) {\r\n\r\n      console.log('posting');\r\n\r\n      try {\r\n        const res = await axios.post(`${this.pathName}/comments`, this.commentFieldValue);\r\n\r\n        const { data } = res.data;\r\n        const oldCommentsState = [...this.state.comments];\r\n\r\n        // Update the number of comments on the UI\r\n        this.setState({\r\n          comments: [data, ...oldCommentsState],\r\n        });\r\n\r\n        // Also, reset the commentInputField\r\n        const commentInputElement = this.state.commentInputElement;\r\n        commentInputElement.value = '';\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.comments);\r\n    const { post } = this.state;\r\n    if (!post) {\r\n      return <Loader />\r\n    }\r\n\r\n    const postImage = post.imageUrl ? (\r\n      <div className={classes.PostImage}>\r\n        <img src={post.imageUrl} alt={post.title}></img>\r\n      </div>) : null;\r\n\r\nconst postText = post.article ? (\r\n      <div className={classes.PostText}>\r\n        <p>{post.article}</p>\r\n      </div>) : null;\r\n\r\nreturn (\r\n  <div className={classes.PostDetail}>\r\n        <header className={classes.Header}>\r\n          <h1 className={classes.PostTitle}>{post.title}</h1>\r\n        </header>\r\n\r\n        <section className={classes.Body}>\r\n          {/* Post Image if it exists */}\r\n          {postImage}\r\n\r\n          {/* Post Text if it exists */}\r\n          {postText}\r\n        </section>\r\n\r\n        <Section title={`Comments (${this.state.comments.length})`} className={classes.PostComments}>\r\n          <Comments blurred={this.getCommentValue}\r\n            clicked={this.postComment}\r\n            comments={this.state.comments} />\r\n        </Section>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(PostDetail);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Section from '../../hoc/Section/Section';\r\n// import Modal from '../Modal/Modal';\r\nimport Button from '../../components/Button/Button';\r\nimport classes from './DeletePost.module.css';\r\n\r\n\r\nclass DeletePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // const { id, postType } = this.props;\r\n    this.deletePostHandler = this.deletePostHandler.bind(this);\r\n    this.cancelDeleteHandler = this.cancelDeleteHandler.bind(this);\r\n\r\n    const pathnameDestructure = this.props.location.pathname.split('/');\r\n    this.postType = pathnameDestructure[1];\r\n    this.postId = pathnameDestructure[2] * 1; // a trick to convert string to number\r\n\r\n    this.state = {\r\n      redirect: false,\r\n    }\r\n  }\r\n\r\n  async deletePostHandler(event) {\r\n    try {\r\n      const res = await axios.delete(`/${this.postType}/${this.postId}`);\r\n\r\n      console.log(res);\r\n\r\n      // Set Redirect state to 'true' to send the user back to the Home page\r\n      this.setState({ redirect: true });\r\n\r\n    } catch ({ response }) {\r\n      // const { status, error } = response.data;\r\n      console.log(response);\r\n    }\r\n  }\r\n\r\n  cancelDeleteHandler() {\r\n    // Set Redirect state to 'true' to send the user back to the Home page\r\n    this.setState({ redirect: true });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Section title='Delete Post'>\r\n        {/* Redirect to Home page after delete/cancel */}\r\n        {this.state.redirect ? <Redirect to='/' /> : null}\r\n\r\n        <p>Are you sure you want to delete this post?</p>\r\n  \r\n        <div className={classes.Buttons}>\r\n          <Button styleType={`${classes.Button} dead`} clicked={this.cancelDeleteHandler}>Cancel</Button>\r\n          <Button styleType='danger' clicked={this.deletePostHandler}>Delete</Button>\r\n        </div>\r\n      </Section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DeletePost;\r\n","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport classes from './Feedback.module.css';\r\n\r\n/**\r\n * This sends some feedback to the user\r\n * @param {Object} props \r\n */\r\nclass Feedback extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.feedBackType = this.props.type || classes.Default;\r\n  }\r\n\r\n  state = {\r\n    showFeedBack: false,\r\n  }\r\n\r\n  // We show feedback only if there is a message for the user\r\n  // componentDidMount() {\r\n  //   const that = this;\r\n  //   setTimeout(() => {\r\n  //     that.setState({  });\r\n  //   }, 5000);\r\n  // }\r\n\r\n  getFeedback() {\r\n    return (\r\n      <div className={`${classes.Feedback} ${this.props.message ? classes.Show : ''} ${this.feedBackType}`}>\r\n        <p className={classes.Message}>{this.props.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div className={`${classes.Feedback} ${this.props.message ? classes.Show : ''} ${this.feedBackType}`}>\r\n          <p className={classes.Message}>{this.props.message}</p>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Feedback from '../../components/Feedback/Feedback';\r\nimport Section from '../../hoc/Section/Section';\r\nimport SignUp from '../Auth/SignUp/SignUp';\r\n\r\nclass EmployeeAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // state\r\n    this.state = {\r\n      errorFeedback: '',\r\n      feedback: '',\r\n    };\r\n\r\n    // bindings\r\n    this.getInputValueHandler = this.getInputValueHandler.bind(this);\r\n    this.signUpHandler = this.signUpHandler.bind(this);\r\n  }\r\n\r\n\r\n  signUpDetails = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    gender: '',\r\n    jobRole: '',\r\n    department: '',\r\n    address: '',\r\n  }\r\n\r\n  // Stores the login detail onChange\r\n  getInputValueHandler({ target }, object) {\r\n    object[target.id] = target.value;\r\n  }\r\n\r\n  async signUpHandler(event) {\r\n    event.preventDefault();\r\n    event.persist();\r\n\r\n    // Validate the sign up details\r\n\r\n    // Attempt signUp\r\n    try {\r\n      console.log(this.signUpDetails);\r\n      const res = await axios.post('/auth/create-user', this.signUpDetails);\r\n\r\n      // clear the form\r\n      event.target.reset();\r\n\r\n      // update user sign in state and reset the errorFeedback\r\n      this.setState({\r\n        isUserLoggedIn: true,\r\n        feedback: res.data.data.message,\r\n        errorFeedback: '',\r\n      });\r\n\r\n    } catch (error) {\r\n      if (error.response) {\r\n        this.setState({ errorFeedback: error.response.data.error });\r\n      } else {\r\n        this.setState({ feedback: 'Looks like you are offline' });\r\n      }\r\n    }\r\n\r\n    // Scroll to the top of the form so that the user call see the feed back\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  // returns the Login Screen\r\n  render() {\r\n    return (\r\n      <Section>\r\n        <SignUp errorFeedback={this.state.errorFeedback}\r\n          changed={(event) => this.getInputValueHandler(event, this.signUpDetails)}\r\n          submitted={this.signUpHandler} />\r\n\r\n        {/* Place Feedback here */}\r\n        <Feedback message={this.state.feedback} />\r\n\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeAccount;\r\n","import React, { Component } from 'react';\r\nimport EmployeeAccount from '../EmployeeAccount/EmployeeAccount';\r\n\r\nclass Members extends Component {\r\n\r\n  render() {\r\n    return <EmployeeAccount />\r\n  }\r\n}\r\n\r\nexport default Members;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Aux from '../hoc/Auxiliary/Auxiliary';\r\nimport Home from '../container/Home/Home';\r\nimport NewPost from '../container/NewPost/NewPost';\r\nimport PostDetail from '../container/PostDetail/PostDetail';\r\nimport DeletePost from '../container/DeletePost/DeletePost';\r\nimport Members from '../container/Members/Members';\r\n\r\nconst routes = (props) => {\r\n  // eslint-disable-next-line no-unused-expressions\r\n  return (\r\n    <Aux>\r\n      <Route path='/' exact component={Home} />\r\n      <Route path='/post/new' exact component={NewPost} />\r\n      <Route path='/gifs/([0-9]+)' exact component={PostDetail} />\r\n      <Route path='/articles/([0-9]+)' exact component={PostDetail} />\r\n      <Route path='/articles/([0-9]+)/edit' exact component={NewPost} />\r\n      <Route path='/(gifs|articles)/([0-9]+)/delete' exact component={DeletePost} />\r\n      <Route path='/members' exact component={Members}/>\r\n    </Aux>\r\n  );\r\n}\r\n\r\nexport default routes\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { getToken } from '../../services/Credentials';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Nav from '../../components/Nav/Nav';\r\nimport Routes from '../../hoc/Routes';\r\n\r\nconst layout = (props) => {\r\n  // set token\r\n  const token = getToken();\r\n  console.log(token);\r\n  if (token) {\r\n    axios.defaults.headers = {\r\n      token\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Aux>\r\n      {/* Navigation */}\r\n      <Nav triggerSignOut={props.signOutHandler} />\r\n\r\n      {/* Main Section */}\r\n      <main>\r\n        <Routes isUserLoggedIn={props.isUserLoggedIn} />\r\n      </main>\r\n    </Aux>\r\n  );\r\n}\r\n\r\nexport default layout;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Login from './Login/Login';\r\nimport SignUp from './SignUp/SignUp';\r\nimport Layout from '../../components/Layout/Layout';\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // state\r\n    this.state = {\r\n      isLoginScreenActive: true,\r\n      userIsLoggedIn: false,\r\n      errorFeedback: '',\r\n    };\r\n\r\n    // bindings\r\n    this.getInputValueHandler = this.getInputValueHandler.bind(this);\r\n    this.loginHandler = this.loginHandler.bind(this);\r\n    this.signUpHandler = this.signUpHandler.bind(this);\r\n    this.signOutHandler = this.signOutHandler.bind(this);\r\n    this.toggleLoginAndSignUpScreen = this.toggleLoginAndSignUpScreen.bind(this);\r\n  }\r\n\r\n  // Login form input element values\r\n  loginDetails = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  signUpDetails = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    gender: '',\r\n    jobRole: '',\r\n    department: '',\r\n    address: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    // check if the user is logged in\r\n    this.checkCredentials();\r\n  }\r\n\r\n  // Checks if the Client (User) already has credentials in it's localStorage\r\n  checkCredentials() {\r\n    if (this.getCredentials()) {\r\n      // set the user's login state to true\r\n      this.setState({ isUserLoggedIn: true });\r\n    }\r\n  }\r\n\r\n  // Stores User Credentials from server in the local storage\r\n  storeCredentials(userData) {\r\n    // 'curUser' = Current User\r\n    localStorage.setItem('curUser', JSON.stringify(userData));\r\n  }\r\n\r\n  // Retrieves User Credentials from the local storage\r\n  getCredentials() {\r\n    return JSON.parse(localStorage.getItem('curUser'));\r\n  }\r\n\r\n  // Clears Stored Login Credentials on Sign out\r\n  clearCredentials() {\r\n    localStorage.removeItem('curUser');\r\n  }\r\n\r\n  // Stores the login detail onChange\r\n  getInputValueHandler({ target }, object) {\r\n    object[target.id] = target.value;\r\n  }\r\n\r\n  // This handles the Login form on change\r\n  async loginHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // Validate the login details\r\n\r\n    // Attempt Login\r\n    try {\r\n      const res = await axios.post('/auth/signin', this.loginDetails);\r\n\r\n      console.log(res.data.data);\r\n\r\n      // store user credentials in local storage\r\n      this.storeCredentials(res.data.data);\r\n\r\n      // update user sign in state and reset the errorFeedback\r\n      this.setState({\r\n        isUserLoggedIn: true,\r\n        errorFeedback: '',\r\n      });\r\n    } catch ({ response }) {\r\n      this.setState({ errorFeedback: response.data.error });\r\n    }\r\n  }\r\n\r\n  async signUpHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // Validate the sign up details\r\n\r\n    // Attempt signUp\r\n    try {\r\n      console.log(this.signUpDetails);\r\n      const res = await axios.post('/auth/create-user', this.signUpDetails);\r\n\r\n      // store user credentials in local storage\r\n      this.storeCredentials(res.data.data);\r\n\r\n      // update user sign in state and reset the errorFeedback\r\n      this.setState({\r\n        isUserLoggedIn: true,\r\n        errorFeedback: '',\r\n      });\r\n    } catch (error) {\r\n      if (error.response) {\r\n        this.setState({ errorFeedback: error.response.data.error });\r\n      } else {\r\n        this.setState({ errorFeedback: 'Looks like you are offline' });\r\n      }\r\n    }\r\n\r\n    // Scroll to the top of the form so that the user call see the feed back\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  // Handles sign out\r\n  signOutHandler() {\r\n    // clear stored credentials\r\n    this.clearCredentials();\r\n\r\n    // set the user's login state to false\r\n    this.setState({ isUserLoggedIn: false });\r\n  }\r\n\r\n\r\n  // Toggles between login and signup screens based by iniverting the boolean `this.state.isLoginScreenActive`\r\n  toggleLoginAndSignUpScreen() {\r\n    const oldState = this.state.isLoginScreenActive;\r\n    this.setState({\r\n      errorFeedback: '', // remove any error feedback on the previous form\r\n      isLoginScreenActive: !oldState\r\n    });\r\n  }\r\n\r\n  // Returns either the login or signup screen based on the value of `this.state.isLoginScreenActive` above\r\n  renderLoginOrSignUpScreen() {\r\n    return this.state.isLoginScreenActive ? this.renderLoginScreen() : this.renderSignUpScreen();\r\n  }\r\n\r\n  // returns the Login Screen\r\n  renderLoginScreen() {\r\n    return <Login errorFeedback={this.state.errorFeedback}\r\n      changed={(event) => this.getInputValueHandler(event, this.loginDetails)}\r\n      submitted={this.loginHandler}\r\n      toggleScreen={this.toggleLoginAndSignUpScreen} />\r\n  }\r\n\r\n  // returns the Login Screen\r\n  renderSignUpScreen() {\r\n    return <SignUp errorFeedback={this.state.errorFeedback}\r\n      changed={(event) => this.getInputValueHandler(event, this.signUpDetails)}\r\n      submitted={this.signUpHandler}\r\n      toggleScreen={this.toggleLoginAndSignUpScreen} />\r\n  }\r\n\r\n  // Returns the main app. This will only be accessible when the user is loggged in\r\n  renderAppCore() {\r\n    return (\r\n      <Aux>\r\n        <Layout\r\n        isUserLoggedIn={this.state.userIsLoggedIn}\r\n        signOutHandler={this.signOutHandler} />\r\n      </Aux>\r\n    );\r\n  }\r\n\r\n  // The render method\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        {this.state.isUserLoggedIn ? this.renderAppCore() : this.renderLoginOrSignUpScreen()};\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Auth from './container/Auth/Auth';\r\nimport './App.css';\r\n\r\n// Configure Axios Defaults:: baseURL and Token\r\naxios.defaults.baseURL = 'https://floating-lowlands-92074.herokuapp.com/api/v1';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        {/* Wraps the core app with authentication */}\r\n        <Auth />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}